# Lógica de programação

# Photshop

# front-end
- HTML5 e CSS3
- UX UI
- JavaScript
- Frameworks (bootstrap)
- CMS (wordpress)

# banco de dados

# sistemas desktop
electron

# back-end (Java ou php)

# testes

# pi
___________________________________
Lógica de programação
- variáveis
- operadores
- algorítmo
- estruturas de controle
- POO
- estruturas de dados

__________________________________________________________________

MANDAMENTOS DA PROGRAMAÇÃO
1) UX (User eXperience) - desenvolver sempre pensando na experiência do usuário.

Dica de vídeo: https://youtu.be/Z1GNW_woXIO?si=rt8A-7amLsIxuoKW

2) usar o mínimo possível de código (variáveis, operadores compradores estruturas de controle etc) para resolver o problema (lembrar do marca-passo)

3) Entender o Problema: Não adianta sentar na frente PC se você não sabe resolver o problema.
Algorítmo ("receita de bolo")
Conceito: 
            variáveis 
entrada - processamento - saída

GIT e GITHUB

Comandos básicos do git:
git config --global user.name "Seu nome"
git config --global user.email "seuemail@email.com"
git clone url_do_repositório (clonar repositório)
git add . (adiciona ao repositório local)
git push (enviar o repostório)
git commit -m "tutorial" (documentar as alterações)

Gerar token GitHub
1) Settings
2) Developer Settings
3) Token classic
4) Gerar o token selecionando tudo, guardar o token

Boas práticas na programação
1) Cabeçalho de documentação
/**
    Nome do projeto
    Descrição da Classe / função
    @author Professor José de Assis
    @version 1.0
*/
 2) Nomes de arquivos, variáveis, funções, classes, etc 
 Regras (clean mode)
 - Declarar nomes uqe tenham em relação com problema
 - Não usar espaço, "ç", acento e caracteres especiais para declaração de nomes (erros insternos no programa)
 - Só classes iniciam com letras maiúscula
 - Não iniciar um nome com número 
 - Quando for declarar dois nomes uar a técnica do camelo (camel case) - Usar uma letra maiúscula na segunda palavra como por exemplo (camelCase)
__________________________________________________________________________
 Comandos Básicos do MS-DOS 
 cls -> limpar a tela
 dir -> listar arquivos e diretórios
 cd nome_diretório -> entrar no diretórios 
 cd ..-> voltar para o diretório anterior
 
__________________________________________________________________
Node - Plataforma que permirte a execução do JavaScript Fora do navegador (browser)
https://nodejs.org/  (baixar a versão LTS)
 
Comandos básicos:
node -v
 
Gerenciador de pacotes para o node:
npm está relacionado a pasta do projeto ou seja os pacotes são instalados na raiz do projeto e não no sistema operacional
 
npm -v (versão do npm)
npm ls (lista pacotes instalados)
 
npm init (iniciar um novo projeto JavaScript)
     ____package.json
 npm ls (listar pacotes instalados)
 npm i nome_do_pacote (instalar um novo pacote)
 npm i nome_do_pacote (remover pacote)
json(JavaScript object notation)
__________________________________________________________________

Variável e constante
Uma constante é como uma variável, mas com uma diferença importante: uma vez que você define o valor de uma constante, ele não pode ser alterado durante a execução do programa.

Por que usar constantes?
Segurança: Se você sabe que um valor não deve ser alterado em seu programa, usar uma constante evita erros.
Legibilidade: Quando você usa uma constante, deixa claro para quem está lendo o código que aquele valor é fixo e importante.
Boas práticas: Em muitos casos, é recomendado usar constantes sempre que possível para valores que não precisam mudar, facilitando a manutenção do código.

Uma variável é um espaço na memória do computador onde armazenamos dados que podem ser utilizados e modificados durante a execução de um programa. O nome "variável" vem do fato de que o valor armazenado pode variar ao longo do tempo, conforme o programa roda.

Por que usar variáveis?
Para guardar informações que você vai precisar mais tarde.
Para realizar cálculos ou tomar decisões baseadas em diferentes valores.

Nas linguagem de programação as variáveis são tipadas ou dinâmicamente tipadas

Existem 3 tipos de variáveis :
String -> Armazena caracteres e números inteiros e não inteiros
Boolean -> true | false

ATENÇÃO :No JS uma variável pode ser criada usando let ou var
var (obsoleto e inseguro), usar sempre o let
__________________________________________________________________
Comandos JavaScript
console.log() -> escrever no console
console.clear() -> Limpar a tela do console
const -> criar(delcarar) uma constante
let -> criar(declarar) uma Variável
typeof() varificar o tipo de variável



__________________________________________________________________
Estrutura    de controle 
- condicionais
- laços de repetições

Estruturas de controle condicionais 

if (condição) {
    //condição verdadeira
}

if (condição) {
    //condição verdadeira
} else {
    //condição falsa
}

Observações:
1) Uma condição nunca pode ser verdadeira e falsa simultaneamente.
2) No uso do if-else sempre uma das condições será processada.